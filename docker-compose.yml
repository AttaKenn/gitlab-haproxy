services:
  gitlab:
    image: gitlab/gitlab-ce:latest
    restart: always
    hostname: localhost
    container_name: gitlab
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        # Add any other gitlab.rb configuration here, each on its own line
        external_url 'https://gitlab' # `gitlab` used for local setup purpose
        letsencrypt['enable'] = false
        nginx['listen_port'] = 80 # Nginx is to expect an http traffic forwarded from HAProxy
        nginx['listen_https'] = false # Set to false due to SSL termination at the HAProxy side
        nginx['real_ip_trusted_address'] = ["192.168.0.0/20"]
        nginx['real_ip_header'] = 'X-Forwarded-For'
        nginx['real_ip_recursive'] = 'on'
        nginx['proxy_set_headers'] = {
          "X-Forwarded-Proto" => "http"
        }
        nginx['status'] = {
          "enable" => true,
          "listen_addresses" => ["127.0.0.1"],
          "port" => 9999,
          "vts_enable" => true,
          "options" => {
            "server_tokens" => "off",
            "access_log" => "off",
            "allow" => "127.0.0.1",
            "deny" => "all"
            }
        }
        node_exporter['enable'] = true
    volumes:
      - ./config:/etc/gitlab
      - ./logs:/var/log/gitlab
      - ./data:/var/opt/gitlab
    shm_size: '256m'
    networks:
      - gitnet
  haproxy:
    image: haproxy:latest
    restart: always
    container_name: haproxy
    hostname: haproxy
    ports:
      - 80:80
      - 22:2222
      - 443:443
      - 3000:3000 # grafana
      - 9090:9090 # prometheus (bundled with Gitlab)
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    # Uncomment line below after generating your own self-signed certificate  
    #  - ./haproxy/certs/ssl.pem:/usr/local/etc/haproxy/certs/ssl.pem:ro
    networks:
      - gitnet
  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    container_name: grafana
    hostname: grafana
    user: '0'
    volumes:
      - ./grafana:/var/lib/grafana/:rw
    networks:
      - gitnet
networks:
  gitnet:
    name: gitnet
    ipam:
      config:
        - subnet: 192.168.0.0/20